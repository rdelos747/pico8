pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
-- space survival

story=0
--[[
0 begin
1 john 1
2 john 2
3 blue key

99 green key // test
100 red key // test
]]--

splt={} -- blood splat
strs={} -- stars
flames={}

lvls={
	crew={
		top=0,lft=64,bot=15,rht=112,
		doors={
			{x=66,y=6,dir="h"},
			{x=78,y=6,dir="h"},
			{x=82,y=6,dir="h"},
			{x=79,y=13,dir="v",to="cpu",story=3},
			{x=84,y=8,dir="v"},
			{x=110,y=11,dir="h",to="hall"},
			{x=64,y=8,dir="v",to="cat_walk",story=99}
		},
		enemy_map={
			--x,y,typ,story,sleep
			{100,3,0},
			{103,8,0},
			{103,8,0},
			{105,9,0},
			{94,8,0,3},
			{70,9,1,1,0} --todo, impliment sleep
		}
	},
	bridge={
		top=0,lft=0,bot=0,rht=0,
		doors={
			{x=112,y=33,dir="v",to="hall"}
		},
	},
	hall={
		top=11,lft=108,bot=41,rht=112,
		doors={
			{x=110,y=11,dir="h",to="crew"},
			{x=112,y=33,dir="v",to="bridge"}
		},
	},
	cpu={
		top=10,lft=79,bot=23,rht=103,
		doors={
			{x=79,y=13,dir="v",to="crew"},
		}
	},
	cat_walk={
		top=0,lft=0,bot=0,rht=0,
	},
}

lvl=nil

x_icon=nil
x_icon_t=0
popup=nil
notif=nil
notif_t=0

function _init()
	printh("====game start====")	
	add_stars()
	init_lvl(nil)
end

function init_lvl(from_door)
	popup=nil
	if from_door==nil then
		lvl=lvls[strt_lvl] --hack
	else
		lvl=lvls[from_door.to]
		printh("new level "..from_door.to)
	end
	
	-- add doors
	for d in all(lvl.doors)do
		if d.dir=="v" then
			mset(d.x,d.y,47)
		else 
			mset(d.x,d.y,46)
		end
	end
	
	-- init enemy list
	if lvl.enemies==nil then
		lvl.enemies={}
	end
	
	-- add enmies
	for em in all(lvl.enemy_map)do
		printh(em[4])
		if em[4]==nil or story>=em[4] then
			add_enemy(em[1]*8+6,em[2]*8,em[3],lvl.enemies)
			del(lvl.enemy_map,em)
		end
	end
	
	-- reset living enemies
	for e in all(lvl.enemies)do
		e.agro=0
	end
	
	-- flames
	flames={}
	for j=lvl.top,lvl.bot do
	for i=lvl.lft,lvl.rht do
		if mget(i,j)==56 then
			add_flame(i,j)
		end
	end end
	
	if(from_door==nil)return
	
	-- move player to other side
	if from_door.dir=="h" then
		if pp.y<from_door.y*8 then
			pp.y=from_door.y*8+12
		else
			pp.y=from_door.y*8-9
		end
	else
		if pp.x<from_door.x*8 then
			pp.x=from_door.x*8+12
		else
			pp.x=from_door.x*8-9
		end
	end
end

function _draw()
	cls()
	if mode==90 then
		draw_buff()
	else
		draw_game()
	end
end

function draw_buff()
	for j=0,31 do
	for i=0,31 do
		if buff[j][i]==0 then
			pset(camx+i,camy+j,0)
		else
			pset(camx+i,camy+j,8)
		end
	end end
end

function draw_game()
	camera(camx,camy)
	
	local m_x=flr(camx/8)-1
	local m_y=flr(camy/8)-1
	local m_filter=0
	--if(pause>0)m_filter=1	???
	
	palt(0,false)
	foreach(strs,draw_star)
	
	map(m_x,m_y,m_x*8,m_y*8,
		18,18,m_filter)
	palt()
	
	for d in all(lvl.npc_d) do
		d()
	end
	
	foreach(lvl.enemies,draw_enemy)
	foreach(splt,draw_splt)
	foreach(flames,draw_flame)
	draw_lighting()
	draw_player()

	draw_hud()
	
	if x_icon!=nil then
		spr(flr(x_icon_t)%2==0 and 25 or 26,x_icon.x,x_icon.y)
	end
	
	if popup!=nil then
		rectfill(camx+20,camy+50,camx+108,camy+84,0)
		print(popup,camx+22,camy+52,7)
		
		rect(camx+20,camy+50,camx+108,camy+84,7)
		spr(flr(x_icon_t)%2==0 and 25 or 26,camx+100,camy+76)
	end
	
	if notif!=nil then
		local len=#notif*4/2
		print(notif,pp.x-len,pp.y-(8+notif_t),7)
	end
	
	print("x: "..pp.x..", y: "..pp.y,camx,camy,7)
	print("story: "..story,camx,camy+8,7)
end

function draw_hud()
	rectfill(camx,camy+120,camx+128,camy+128,0)
	if ammo==0 then
		print("no ammo",camx+1,camy+122,7)
	elseif reload_t>0 then
		if flr(reload_t/10)%2==1 then
			print("reloading",camx+1,camy+122,7)
		end
	else
		local a=ammo%8==0 and 8 or ammo%8
		for i=0,a-1 do
			line(camx+2+(i*2),camy+122,camx+2+(i*2),camy+125,5)
			pset(camx+2+(i*2),camy+122,9)
		end
	end
	
	if story>=3 then
		pal(15,12)
		spr(27,camx+120,camy+120)
	end
	if story>=99 then
		pal(15,11)
		spr(27,camx+112,camy+120)
	end
	if story>=100 then
		pal(15,8)
		spr(27,camx+104,camy+120)
	end
	pal()
end

buff={}

function draw_lighting()	
	for j=0,34 do
		buff[j]={}
	for i=0,34 do
		buff[j][i]=0
	end end
	
	draw_cone_32()
	
	-- player lighting
	for j=-2,1do
	for i=-2,1do
		local pi=flr(pp.x/4)+i
		local pj=flr(pp.y/4)+j
		local bi=(pi+1)-cami4 
		local bj=(pj+1)-camj4
		buff[bj][bi]=1
	end end
	
	-- draw buff
	pal(7,0)
	for j=0,32 do
	for i=0,32 do
		local x=cami4*4+i*4
		local y=camj4*4+j*4
		local m=mget(flr(cami4+i)/2,flr(camj4+j)/2)
		if x<0 or x>128*8 or 
					y<0 or y>128*4 or
					m==0 then
			goto continue
		end
		local v=buff[j][i]
		
		if v==0 then			
			if (buff[max(j-1,0)][i]==1 or
						buff[min(j+1,31)][i]==1 or
						buff[j][max(i-1,0)]==1 or
						buff[j][min(i+1,31)]==1) then
				spr(24,x,y)
			else
				rectfill(x,y,x+4,y+4,0)
			end
		end
		::continue::
	end end
	pal()
end

function draw_cone_32()
	--local pts={}
	
	local a=atan2(dx,dy) -- player angle
	a=(a-0.18)%1 --start angle, minus one half of the total
	local frac=0.36/64
	
	for x=0,63 do
		local cx=pp.x
		local cy=pp.y
		local step=0
		while step<14 do
			local i,j=flr(cx/4),flr(cy/4)
			local bi=(i+0)-cami4 --offset in buffer
			local bj=(j+0)-camj4 --offset in buffer
			if light_free(flr(i/2),flr(j/2)) then
				buff[bj][bi]=1
				step+=1
				--add(pts,{cx,cy,8})
			else
				-- if hit wall, 
				-- apply same lighting 
				-- but exit loop
				buff[bj][bi]=1
				step=1000
				--add(pts,{cx,cy,11})
			end
			cx+=cos(a)*4
			cy+=sin(a)*4
		end
		a=(a+frac)%1
	end
	
	//for p in all(pts)do
	//	pset(p[1],p[2],p[3])
	//end
end

function _update()
	update_game()
end

function update_game()
	x_icon=nil
	
	update_strs()
	-- player update must come before npc
	update_player()
	for u in all(lvl.npc_u) do
		u()
	end
	foreach(lvl.enemies,update_enemy)
	foreach(splt,update_splt)
	foreach(flames,update_flame)
	update_cam()
	
	x_icon_t=(x_icon_t+0.2)%2
	
	if notif !=nil then
		notif_t+=0.5
		if notif_t>15 then
			notif=nil
		end
	end
end

camx,camy=0,0
cami4,camj4=0,0
cami8,camj8=0,0
function update_cam()
	camx=pp.x-64
	camy=pp.y-64
	
	//local cur=lvl[cur_lvl]
	//camx=mid(camx,cur.left*8+64,cur.right*8+64)
	//camy=mid(camy,cur.top*8+64,cur.bot*8+64)

	cami8=flr(camx/8)
	camj8=flr(camy/8)
	--used for offsets when 
	--placing into buff
	cami4=flr(camx/4)
	camj4=flr(camy/4)
end

function round(n)
 return (n%1<0.5) and flr(n) or ceil(n)
end

function rand(bot,top)
	return flr(rnd((top+1)-bot))+bot
end

function randf(bot,top)
	return bot+(top-bot)*rnd() 
end

-- approx dist
function dist(a,b)
	local dx=a.x-b.x
	local dy=a.y-b.y
 local maskx,masky=dx>>31,dy>>31
 local a0,b0=(dx+maskx)^^maskx,(dy+masky)^^masky
 if a0>b0 then
  return a0*0.9609+b0*0.3984
 end
 return b0*0.9609+a0*0.3984
end

function place_free_bb(o,x,y)
	local ox=(o.x-o.w/2)
	local oy=(o.y-o.h/2)
	local f=true
	if(not place_free(ox+x,oy+y))f=false
	if(not place_free(ox+x+o.w,oy+y))f=false
	if(not place_free(ox+x,oy+y+o.h))f=false
	if(not place_free(ox+x+o.w,oy+y+o.h))f=false
	return f
end

function place_free(x,y)
	local i=flr(x/8)
	local j=flr(y/8)
	local b=mget(i,j)
	return b<32 or b>63
end

function light_free(i,j)
	local b=mget(i,j)
	return b<32 or b>47
end

function col_bb(a,b)
	local ax=a.x-a.w/2
	local ay=a.y-a.h/2
	local bx=b.x-b.w/2
	local by=b.y-b.h/2
	return ax<=bx+b.w and
		ax+a.w>=bx and ay<=by+b.h and
		ay+a.h>=by
end

function add_splt(a,x,y)
	for i=0,3 do
		local ra=randf(-0.1,0.1)
		add(splt,{
			x=x,y=y,a=a+ra,
			t=rand(0,5),s=3
		})
	end
end

function draw_splt(s)
	pset(s.x,s.y,8)
end

function update_splt(s)
	s.x+=cos(s.a)*s.s
	s.y+=sin(s.a)*s.s
	s.s*=0.5
	
	s.t+=1
	if s.t>10 then
		del(splt,s)
	end
end

function add_stars()
	for _=0,50 do
		local spd=randf(0.1,1)
		local c=7
		if(spd<0.5)c=16
		add(strs,{
			x=rand(1,128),y=rand(1,126),
			spd=spd,c=c
		})
	end
end

function draw_star(s)
	pset(camx+s.x,camy+s.y,s.c)
end

function update_strs()
	//if rand(0,100)>50 then
	//	add_star()
	//end
	for s in all(strs) do
		s.x-=3*s.spd
		if(s.x<=0)s.x=128
	end
end

function set_x_icon(x,y)
	x_icon={x=x,y=y}
end

function set_notif(s)
	notif=s
	notif_t=0
end

function add_flame(i,j)
	add(flames,{
		x=i*8,y=j*8,t=0,
		parts={}
	})
end

function draw_flame(f)
	for p in all(f.parts)do
		local col=6
		local sz=0
		if(p.t>5)col,sz=8,1
		if(p.t>10)col,sz=9,2
		if(p.t>15)col,sz=10,2
		rectfill(p.x,p.y,p.x+sz,p.y+sz,col)
	end
end

function update_flame(f)
	if f.t==0 then
		f.t=3
		add(f.parts,{
			x=f.x+rand(0,8),
			y=f.y+rand(0,8),
			t=rand(10,20)
		})
	end
	
	for p in all(f.parts) do
		p.y-=0.5
		p.t-=1
		if(p.t==0)del(f.parts,p)
	end
	
	f.t-=1
end
-->8
-- player
pp={
	x=528,y=24,w=4,h=7
	// x=880,y=256,w=4,h=7--test
}
dx=0
dy=1

strt_lvl="crew"

p_mode="norm"
walk_t=0
aim=0
ammo=0
reload_t=0
shot_t=0 --shot reset time
shot_f_t=0 --shot fire time, just for drawing
x_pressed,l_x_press=false,0
z_pressed,l_z_press=false,0
target=nil
cur_door=nil

anim_walk={2,3,2,1,2,3,2,1}

function draw_player()
	local idx=flr(walk_t)
	local px=(pp.x-pp.w/2)-1
	local py=(pp.y-pp.h/2)-4
	
	-- head
	local off_y_h=aim==1 and 1 or 0
	--if(idx%4!=0)off_y_h=1
	if dy==1 then
		if dx==1 then
			spr(7,px,py+off_y_h)
		elseif dx==-1 then
			spr(7,px,py+off_y_h,1,1,true,false)
		else
			spr(4,px,py+off_y_h)
		end
	elseif dy==-1 then
		spr(6,px,py+off_y_h)
	elseif dx==1 then
		spr(5,px,py+off_y_h)
	elseif dx==-1 then
		spr(5,px,py+off_y_h,1,1,true,false)
	end

	-- legs
	local s=anim_walk[idx+1]
	local fx=idx>3 and true or false
	spr(s,px,py+8,1,1,fx,false)
	
	-- arms
	if shot_f_t>0 then
		local mfx=0 --muzzle flash x offset
		local mfy=0 --muzzle flash x offset
		if dy==1 and dx==-1 then
			-- sw
			spr(18,px-1,py+5)
			mfx=-1
			mfy=-1
		elseif dy==1 and dx==1 then
			-- se
			spr(18,px+1,py+5,1,1,true,false)
			mfx=3
			mfy=0		
		elseif dy==1 and dx==0 then
			-- s
			spr(16,px,py+6)
			mfy=-1
		elseif dy==-1 and dx==-1then
			-- nw
			spr(19,px,py,1,1,true, false)
			mfx=1
			mfy=-2
		elseif dy==-1 and dx==1 then
			-- ne
			spr(19,px,py)
			mfy=-2
			mfx=1
		elseif dy==-1 and dx==0 then
			-- n
			spr(10,px-2,py-2,1,1,false,true)
			mfx=1
			mfy=-1
		elseif dy==0 and dx==1 then
			-- e
			spr(17,px+3,py+3)
			mfx=2
		elseif dy==0 and dx==-1 then
			-- w
			spr(17,px-3,py+3,1,1,true,false)
			mfx=-1
		end
		
		--muzzle flash
		local a=atan2(dx,dy)
		for j=-3,2 do
		for i=-3,2 do
			if rnd(1)>0.8 then
				pset(
					((pp.x+mfx)+i)+cos(a)*8,
					((pp.y+mfy)+j)+sin(a)*8
					,10
				)
			end
		end end
	elseif aim==1 then
		if dy==1 and dx==-1 then
			-- sw
			spr(14,px-1,py+6)
		elseif dy==1 and dx==1 then
			-- se
			spr(14,px+1,py+6,1,1,true,false)
		elseif dy==1 and dx==0 then
			-- s
			spr(12,px,py+6)
		elseif dy==-1 and dx==-1then
			-- nw
			spr(15,px,py,1,1,true, false)
		elseif dy==-1 and dx==1 then
			-- ne
			spr(15,px,py)
		elseif dy==-1 and dx==0 then
			-- n
			spr(10,px-2,py-3,1,1,false,true)
		elseif dy==0 and dx==1 then
			-- e
			spr(13,px+3,py+6)
		elseif dy==0 and dx==-1 then
			-- w
			spr(13,px-3,py+6,1,1,true,false)
		end
	else
		local off_y=6
		if(idx%4!=0)off_y=5
		if dy==1 then
			spr(8,px,py+off_y)
		elseif dy==-1 then
			spr(10,px,py+off_y)
		elseif dx==1 then
			spr(9,px+1,py+off_y)
		elseif dx==-1 then
			spr(11,px-1,py+off_y)
		end
	end
	
	if p_mode=="grabbed" then
		set_x_icon(px,py-8)
	end
	
	if cur_door!=nil then
		spr(25,px,py-8)
	end
	
	-- draw hit box
	//rect(
	//pp.x-pp.w/2,pp.y-pp.h/2,
	//pp.x+pp.w/2,pp.y+pp.h/2,8
	//)
	//pset(pp.x,pp.y,8)
end

function update_player()
//	if 
	if btn(❎) then
		if l_x_press==0 then
			x_pressed=true
			//if popup_tried==
			//popup=nil
		else
			x_pressed=false
		end
		l_x_press=1
	else
		l_x_press=0
		x_pressed=false
	end
	
	if btn(🅾️) then
		if l_z_press==0 then
			z_pressed=true
		else
			z_pressed=false
		end
		l_z_press=1
	else
		l_z_press=0
		z_pressed=false
	end
	
	//if(popup!=nil)return
	
	if(p_mode=="norm")update_player_norm()
	if(p_mode=="hurt")update_player_hurt()
	if(p_mode=="grabbed")update_player_grabbed()
end

function update_player_norm()	
	-- aiming
	aim=0
	if(btn(🅾️))aim=1
	if aim==0 then
		target=nil
	elseif aim==1 and target==nil then
		target=calc_target()
	end
	
	if(shot_f_t>0)shot_f_t-=1
	
	if shot_t>0 then
		shot_t-=1
	elseif aim==1 and x_pressed and reload_t==0 then
		if ammo>0 then
			shot_t=10
			shot_f_t=2
			ammo-=1
			shoot()
			if ammo>0 and ammo%8==0 then
				reload_t=80
			end
		end
	end
	
	if reload_t>0 then
		reload_t-=1
	end
	
	-- other x button stuff
	//mode=0
	//if aim==0 and btn(❎) then
	//	mode=90 --test, remove
	//end
	
	--[[
	if not btn(❎) then
		x_press=0
	end
	--]]
	
	-- direction
	local ndx,ndy=0,0
	
	if (btn(⬇️))ndy=1	
	if (btn(⬆️))ndy=-1
	if (btn(➡️))ndx=1
	if (btn(⬅️))ndx=-1

	-- movement
	if ndx!=0 or ndy!=0 then
		if ndx!=dx or ndy!=dy then
			target=nil --reset target if we change dir
		end
		dx,dy=ndx,ndy
		if aim==0 then
			walk_t=(walk_t+0.35)%8
			
			local nx,ny=dx,dy
			if dx!=0 and dy!=0 then
				nx=dx*0.707
				ny=dy*0.707
			end
			if popup==nil then
				move_player(nx,ny)
			end
		end
	else
		walk_t=0
	end
	
	-- collide doors
	cur_door=nil
	for d in all(lvl.doors)do
		local drx,dry=d.x*8+4,d.y*8+4	
		if dist(pp,{x=drx,y=dry})<10 and mget(d.x,d.y)!=69 then
			cur_door=d
		end
	end
	
	-- open doors
	if cur_door!=nil and x_pressed then
		if cur_door.to==nil then
			mset(cur_door.x,cur_door.y,69)
		elseif cur_door.story==nil or story>cur_door.story then
			init_lvl(cur_door)
		elseif popup==nil then
			//door_tried=1
			show_door_popup(cur_door.story)
		else
			popup=nil
		end
	end
	
	-- collide enemy
	for e in all(lvl.enemies)do
		-- todo, dont count dead enemies
		if count(e.trgts)>0 then
			if col_bb(pp,e) then
				p_mode="grabbed"
				grab_t=0
				grab_e=e
				grab_amt=1
			end
		end
	end
	
	--pickup amo
	if mget(flr(pp.x/8),flr(pp.y/8))==30 then
		mset(flr(pp.x/8),flr(pp.y/8),69)
		ammo+=8
		set_notif("got 8 rounds")
	end
end

grab_e=nil
grab_t=0
grab_amt=0
function update_player_grabbed()
	local a=atan2(pp.x-grab_e.x,pp.y-grab_e.y)
	if grab_t==0 then
		grab_t=40
		grab_amt=min(1,grab_amt+0.5)
		add_splt(
			a,
			pp.x+cos((a+0.5)%1)*4,
			pp.y+sin((a+0.5)%1)*4
		)
	end
	if x_pressed then
		printh("pushing back "..grab_amt)
		grab_amt-=0.2
		if grab_amt<=0 then
			hit_enemy(grab_e,0,(a+0.5)%1,20)
			p_mode="norm"
		end
	end
	
	grab_t-=1
end

hurt_t=0
function update_player_hurt()
	local nx=cos(hurt_a)*hurt_s
	local ny=sin(hurt_a)*hurt_s
	move_player(nx,ny)
	hurt_s*=0.7
	hurt_t-=1
	if(hurt_t==0)p_mode="norm"
end

function move_player(nx,ny)
	if place_free_bb(pp,round(nx),0)then
		pp.x+=nx
	end
	if place_free_bb(pp,0,round(ny))then
		pp.y+=ny
	end
	pp.x=round(pp.x)
	pp.y=round(pp.y)
end

sht_ang_rad=0.08
function calc_target()
	local found=nil //{} consider returning a sorted list
	local found_d=10000
	local pa=atan2(dx,dy)
	for e in all(lvl.enemies) do
		-- find if pointing at enemy
		if count(e.trgts)==0 then
			printh("hes dead")
			goto trgt_find_cont
		end
		local ea=atan2(e.x-pp.x,e.y-pp.y)
		local dif_a=abs(pa-ea)
		local pnt_a=min(dif_a,1-dif_a)
		if pnt_a<sht_ang_rad then
			-- check wall between
			local lx,ly=pp.x,pp.y
			local wall=0
			while abs(lx-e.x)>8 or abs(ly-e.y)>8 do
				if not light_free(flr(lx/8),flr(ly/8)) then
					wall=1
				end
				lx+=8*cos(ea)
				ly+=8*sin(ea)
			end
			
			local d=dist(pp,e)
			if d<found_d and wall==0 then
				//printh("found "..e.id)
				found_d=d
				found=e
			end
		end
		::trgt_find_cont::
	end
	return found
end

function shoot()
	if target!=nil then
		target.wt=0
		t=target.trgts[1]
		local tx=target.x+t.x
		local ty=target.y+t.y
		local a=(atan2(pp.x-tx,pp.y-ty)+0.5)%1
		add_splt(a,tx,ty)
		hit_enemy(target,1,a,4)
		
		
		if count(target.trgts)==0 then
			target=nil
		end
		
	end
end

function show_door_popup(s)	
	if s==3 then
		if story==3 then
			story=4
			popup="used the blue\nkey."
		else
			popup="blue key card\nrequired."
		end
	elseif s==1000 then
		//test
	else
		popup="door locked.\nfind another way."
	end
end
-->8
-- enemy

imp_anim_walk={21,22,21,22}
zomb_anim_walk={1,2,1,2}
e_spd=0.1

function add_enemy(x,y,typ,arr)
	-- add targets, dont add
	-- two in the same place
	local t={}
	for i=0,2 do // should be a while, not for
		local rx=rand(-2,2)
		local ry=rand(-5,5)
		local skip=false
		for tg in all(t) do
			if(t.x==rx and t.y==ry)skip=true
		end
		if not skip then
			add(t,{
				x=rx,y=ry,hp=2
			})
		end
	end
	
	add(arr,{
		x=x,y=y,w=4,h=10,wt=0,
		trgts=t, -- hit targets,
		mode="norm",
		typ=typ,
		hit_s=0,
		hit_a=0,
		agro=0,
	})
end

function draw_enemy(e)
	if(e.typ==0)draw_imp(e)
	if(e.typ==1)draw_zomb(e)
end

function draw_zomb(e)
	local ex=(e.x-e.w/2)-1
	local ey=(e.y-e.h/2)-1
	
	if count(e.trgts)==0 then
		//spr(23,ex,ey)
		return
	end
	
	local idx=flr(e.wt)
	
	-- head
	if(pp.y>e.y)pal(13,0)
	pal(12,13)
	spr(7,ex,ey,1,1,pp.x<e.x and true or false, false)
	pal()
	
	-- legs
	local s=zomb_anim_walk[idx+1]
	local fx=idx>2 and true or false
	spr(s,ex,ey+8,1,1,fx,false)
end

function draw_imp(e)
	local ex=(e.x-e.w/2)-1
	local ey=(e.y-e.h/2)-1
	
	if count(e.trgts)==0 then
		spr(23,ex,ey)
		return
	end
	
	local idx=flr(e.wt)

	-- head
	if(pp.y<e.y)pal(13,6)
	spr(20,ex,ey+idx%2,1,1,pp.x>e.x and true or false, false)
	pal()
	-- legs
	local s=imp_anim_walk[idx+1]
	local fx=idx>2 and true or false
	spr(s,ex,ey+8,1,1,fx,false)
	
	-- arms
	line(ex+2,ey+7,ex+0,ey+9,6)
	line(ex+5,ey+7,ex+3,ey+9,6)
	
	-- targets
	if target==e then
		for t in all(e.trgts) do
			//spr(32,e.x+t.x,e.y+t.y)
			pset(e.x+t.x,e.y+t.y,11)
		end
	end
	
	-- draw hit box
	//rect(
	//	e.x-e.w/2,e.y-e.h/2,
	//	e.x+e.w/2,e.y+e.h/2,8
	//)
end

function update_enemy(e)
	if(count(e.trgts)==0)return
	if(e.mode=="norm")update_enemy_norm(e)
	if(e.mode=="hit")update_enemy_hit(e)
	if(e.mode=="push")update_enemy_push(e)
end

function move_enemy(e,nx,ny)
	if place_free_bb(e,nx,0)then
		e.x+=nx
	end
	if place_free_bb(e,0,ny)then
		e.y+=ny
	end
end

function update_enemy_norm(e)
	if(dist(pp,e)<100)e.agro=1
	
	e.wt=(e.wt+0.05)%4
	//local a=atan2(pp.x-e.x,pp.y-e.y)
	if flr(e.wt)%2==1 then
		//local nx=cos(a)*e_spd
		//local ny=sin(a)*e_spd
		//local nx,ny=e_spd,e_spd
		local nx,ny=0,0
		if(pp.x-e.x>2)nx=e_spd
		if(pp.x-e.x<-2)nx=-e_spd
		if(pp.y-e.y>2)ny=e_spd
		if(pp.y-e.y<-2)ny=-e_spd
		//if(pp.x-flr(e.x)<-2)nx*=-1
		//if(pp.y-flr(e.y)<-2)ny*=-1
		if(e.agro==1)move_enemy(e,nx,ny)
	end
end

function update_enemy_hit(e)
	e.hit_s*=0.3
	local nx=cos(e.hit_a)*e.hit_s
	local ny=sin(e.hit_a)*e.hit_s
	move_enemy(e,nx,ny)
	if e.hit_s<=0.01 then
		e.mode="norm"
	end
end

function hit_enemy(e,amt,a,s)
	t=e.trgts[1]
	t.hp-=amt
	e.mode="hit"
	e.hit_s=s
	e.hit_a=a
	if t.hp<=0 then
		del(e.trgts,t)
	end
end
-->8
-- npcs

-- john
john={x=111*8,y=33*8,t=0,
	popup={
		"the captain's locked\nherself in! you need \nto go to the cpu room\nto override the door.",
		"here, take my key\ncard and some ammo.\n\nhurry!",
		"go to the cpu room\nto unlock the door!"
	}
}

function d_john()
	local t=flr(john.t)
	pal(9,11)
	spr(5,john.x,john.y)
	spr(2,john.x,john.y+8)	
	if t==1 or t==3 then
		line(john.x+4,john.y+8,
		john.x+7,john.y+6,3)
	else
		line(john.x+4,john.y+8,
		john.x+5,john.y+5,3)
	end
	pal()
end

function u_john()
	john.t+=0.2
	if(john.t>=5)john.t=0
	
	if dist(pp,{x=john.x+4,y=john.y+4})<16 then
		if story<=3 then
			set_x_icon(john.x,john.y-8)
		end
		if x_pressed then
			if story==0 then
				story=1
				popup=john.popup[1]
			elseif story==1 then
				story=2
				popup=john.popup[2]
			elseif story==2 then
				story=3
				popup=nil
				ammo+=8
				set_notif("got the blue key card")
			elseif story==3 then
				if popup==nil then
					popup=john.popup[3]
				else
					popup=nil
				end
			end
		end
	end
end

-- add update/draw funcs to level
lvls.hall.npc_u={u_john}
lvls.hall.npc_d={d_john}
__gfx__
00000000076666700766667007666670000000000000000000000000000000007c0000000c000000000000c0000000c000c00c0000007770000c000000000070
00000000076666700766667007666670007777000077770000777700007777007c000c0000c00000000000c000000c0000c50c000000555707550cc000000757
0070070007666670076666700766770007cccc7007cccc7007cccc7007cccc707c00c00000c00000000000c000000c000005c000cc0cc770757cc00000000570
0007700007666670076677000766700007cccc7007cccc7007cccc7007cccc70005c0000000c5000000007570000c0000005000000c000000700000000000c70
0007700000777700007700000077000007cddc7007cccd7007cccc7007ccdd70005000000000500000000070000c000000000000000000000000000000000c70
0070070000000000000000000000000007cddc7007cccd7007cccc7007ccdd700000000000000000000000000000000000000000000000000000000000000c70
0000000000000000000000000000000007cccc7007cccc7007cccc7007cccc700000000000000000000000000000000000000000000000000000000000000c70
00000000000000000000000000000000076666700766667007666670076666700000000000000000000000000000000000000000000000000000000000000000
00c5cc00000005005000000000000050000000000066660000666600000000000707000006666600000000000000000000007777777777006600000000000000
00000000000050000550000000000050000000000066660000666600000000007070000060d0d0600666660007777000000766666ddddd705509000000000000
00000000c0050000000ccc00000000c00006600000600600006006000000000007070000600d006060d0d06007fff70000076666dddddd705505000000000000
000000000c0c000000000000000000c0006666000060060000600000000006607070000060d0d060600d006007ffff700000766d6ddddd700000090000000000
0000000000c0000000000000000000c000d6d600000000000000000066066666000000005666665060d0d06007ffff700000766d8d00dd705900500000000000
00000000000000000000000000000000006666000000000000000000006666d600000000555555505666665007f66f70000007d5887777000000009000000000
00000000000000000000000000000000000660000000000000000000666060000000000005555500055555000776677000000825888280000590005000000000
00000000000000000000000000000000000660000000000000000000600006600000000000000000000000000000000000008020802200000000000000000000
1111111110000001111111111000000110000001111111111111111110000001100000011000000110000001111111111111111111111111000660000d0000d0
0000000010000001000000010000000110000000100000000000000000000001000000001000000010000001100000001000000100000001ddd66ddd0d0000d0
0000000010000001000000010000000110000000100000000000000000000001000000001000000010000001100000001000000100000001000660000d0000d0
00000000100000010000000100000001100000001000000000000000000000010000000010000000100000011000000010000001000000010000000066600666
00000000100000010000000100000001100000001000000000000000000000010000000010000000100000011000000010000001000000010000000066600666
0000000010000001000000010000000110000000100000000000000000000001000000001000000010000001100000001000000100000001000660000d0000d0
0000000010000001000000010000000110000000100000000000000000000001000000001000000010000001100000001000000100000001ddd66ddd0d0000d0
1111111110000001100000011111111111111111100000011000000110000001111111111000000111111111111111111000000111111111000660000d0000d0
66666666000000000000000660000000666666666666666660000000000000060010000000100000000000000000000000000000000000000000000000000000
50505050000000000000000660000000505050566050505060000000000000061501010015010100000000000000000000000000000000000000000000000000
50505050000000000000000660000000505050566050505060000000000000060100105501001055000000000000000000000000000000000000000000000000
00000000000000000000000660000000000000066000000060000000000000060510555005105550000000000000000000000000000000000000000000000000
00000000000000000000000660000000000000066000000060000000000000060505501105055011000000000000000000000000000000000000000000000000
00000000666666660000000660000000000000066000000066666666666666661050100110501001000000000000000000000000000000000000000000000000
00000000505050500000000660000000000000066000000050505050505050505115551151155511000000000000000000000000000000000000000000000000
00000000505050500000000660000000000000066000000050505050505050505515555155155551000000000000000000000000000000000000000000000000
11111111111111111111111111111111000100010000000011111111555155551111111111111111000001111110000011111111000000000000000000000000
00000000000505511550550015500551101010100100001016666661515151550000000000155100000115555551100000111100000000000000000000000000
d5555555555005d11d5000551d5005d1010001000000000060cccc065550555501555551015d501000155dddddd5510001111010000000000000000000000000
d01d601dd00005011000000d1dd01dd1101010100000000060cccc06110000110555555515555011015dd555555dd510115d0001000000000000000000000000
5555d55d555005d11d5000551d5005d10001000100000000777777775550dd551555556515d55511015d55000055d51015110001000000000000000000000000
000000000005055115505500155005511010101000000000787879775150d1551555565515d5551115d5500110055d51115dd001000000000000000000000000
111111111111111111111111111111110100010001000010696b6a66555155550155555115d5501115d5501111055d5115110001000000000000000000000000
00000000000000000000000000000000101010100000000066666666555155550000000015d5501115d5501111055d5111500001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000015d55001000000000000000015110001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000015d55001000000000000000011500001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000015d55011000000000000000015110001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000011d55011000000000000000011500001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000011010011000000000000000010010001000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000001101010000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000005454545412545454a2545454545454545454545454545412
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254545454545454545454545454545454545412
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012545454c2545454545454545454545454545232
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254545412545454545454545454545454541233
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254545412545454545454545454545202023200
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254545412545454545454545454541200000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254545412545454545454545454541200000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254c1d192020202020202020202023200000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001254e15412000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000092d254b272000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054545400000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002020000020202
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202000200000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000002000202
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000202020000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020000020200
__map__
3130303030303031313030303030303130303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303026202020262020202020202026202020262020202020202026202020262020202620202020202020202020202020202022000000000000000000000000000000
3000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021404040214040404040404021404040214040402140404021404040214040402140464040404640404046404049404921000000000000000000000000000000
300000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002145454521454545454545452145454521451c1d2145454521454545214545452145454545454545453631317f597f5921000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000214545452145454538454545384545452145451e21454545214545452145454521454545454545454544444436317f7f21000000000000000000000000000000
3000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021454545214545392145454545454545214545452145454521454545214545452145454545252245453534444444334a21000000000000000000000000000000
300000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002145454521454545214545452145454521454545214545452145454521454545214545454524234545337f303444335921000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000292d452b282d382b282d452b282d452b282d452b282d452b282d452b282d452b234545454546464545337f7f3244337f21000000000000000000000000000000
310000000000003130000000000000310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a414542404145424041454240414542404145422a41454240414542404145424145454545454545453631313744364b21000000000000000000000000000000
3100000000000030310000000000003100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045454545454545454545454538394545454545454545454545454545454545454545454545454545454545454545454521000000000000000000000000000000
300000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c4545454545454538454545453845452c4545452c45454545454545454545454545454545454545454545454545454521000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020282020202245452b2020202020202026282020202626202020202626202026262020202026262026202020202245454521000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f00004040404040404021454542404040404040402140464040242340404040242340402423404046402423402140404040292d452b27000000000000000000000000000000
300000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f497f7f49006e496e4a21451c1d454545384545452a454545454646454545454646454546464545454546464521454545452145454521000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f597f7f597f7f597f5921454545454538454545454545454545454545454545454545454545454545454545452a454545452145454521000000000000000000000000000000
30000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f00003131313131317f6e21454545394545454545452c454545454545454545454545454545454545454545454545454545452145454521000000000000000000000000000000
31303030303030313130303030303031000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f00444444444444334a24202020202020202020202745454545454545452b202d4545454545452c45454545452c454545452145454521000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f30303034444433594249404049404049404040214545454545454545464646454545452b2027454545454521454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f324444337f7f594d4d594d4d594d313129202020202020224545454545454545464624202d45454529202d452b2745454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f31313137444436313131313131313131374545214640464640402145454545454545454545464046452b2027454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f444444444444444444444444444444444445452a454545454545242245452c45454545454545454545424621454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f4444444444444444444444444444444444454545454545454545422420202820202d45452b202d4545454521454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f303030344444353030303030303030303445452c454545454545454240464640464145454646464545454521454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f4444004d4d4d4d4d4d4d4d4d7e303021454545454545454545454545454545454545454545454521454545452145454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f007f00004d4d4d4d4d4d4d4d4d4d7e7e292020202020202020202020202020202000000000000000292d452b202745454521000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f7f7f7f4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d00454545452145454529202020202020202020202200000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f7f7f7f4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d00454545452145454521404040404040404040402100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f7f7f7f7f4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d00454545452145454521454545454545454545452100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f7f7f7f7f7f4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d00454545452145454521454545454545454545452420202200
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f7f7f7f7f7f7f7f7f7f7f7f7f7f4d4d004d4d4d4d4d4d4d4d4d4d4d4d004d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d4d0000454545452145454521454545454545454545454240402422
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000454545452145454521454545454545454545454545454221
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000454545452145454521454545454545454545454545454521
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000454545452145454521454545454545454545454545454521
